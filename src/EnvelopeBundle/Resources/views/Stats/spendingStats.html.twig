{% extends 'AvanzuAdminThemeBundle:layout:base-layout.html.twig' %}
{% block page_content %}
    <div class="row">
        <div class="col-sm-8">&nbsp;</div>
        <div class="col-sm-4 ">
            <div id="reportrange" class="pull-right" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%">
                <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>&nbsp;
                <span></span> <b class="caret"></b>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6 col-sm-12" id="doughnut-chart">



          <div class="panel panel-default">
            <div class="panel-heading">Spending Doughnut</div>
            <div class="panel-body">
              <canvas id="spendingPie"></canvas>
            </div>
          </div>
        </div>
        <div class="col-lg-6 col-sm-6">
            <div class="panel panel-default">
                <div class="panel-body">
                    <table>
                        {% for transaction in excludedtransactions %}
                            <tr>
                                <td>{{ transaction.description  }}</td>
                                <td>{{ transaction.sumamount|localizedcurrency('AUD') }}</td>
                            </tr>
                        {% endfor %}
                    </table>
                </div>
            </div>
        </div>
    </div><!-- row -->

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/avanzuadmintheme/vendor/adminlte/plugins/chartjs/Chart.js') }}"></script>
    <script type="text/javascript">

        if (moment().quarter() == 4 || moment().quarter() == 3) {
            var current_fiscal_year_start = moment().month('July').startOf('month');
            var current_fiscal_year_end = moment().add('year', 1).month('June').endOf('month');
            var last_fiscal_year_start = moment().subtract('year', 1).month('July').startOf('month');
            var last_fiscal_year_end = moment().month('June').endOf('month');
        } else {
            var current_fiscal_year_start = moment().subtract('year', 1).month('July').startOf('month');
            var current_fiscal_year_end = moment().month('June').endOf('month');
            var last_fiscal_year_start = moment().subtract('year', 2).month('July').startOf('month');
            var last_fiscal_year_end = moment().subtract('year', 1).month('June').endOf('month');
        };

    $(function() {

        function cb(start, end) {
            $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
        }
        cb(moment('{{ startdate | date('Ymd') }}', 'YYYYMMDD'), moment('{{ enddate | date('Ymd') }}', 'YYYYMMDD'));

        $('#reportrange').daterangepicker({
            showDropdowns: true,
            startDate: moment('{{ startdate | date('Ymd') }}', 'YYYYMMDD'),
            endDate: moment('{{ enddate | date('Ymd') }}', 'YYYYMMDD'),

            ranges: {
               'Last 7 Days': [moment().subtract(6, 'days'), moment()],
               'Last 30 Days': [moment().subtract(29, 'days'), moment()],
               'This Month': [moment().startOf('month'), moment().endOf('month')],
               'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
               'This Quarter': [moment().startOf('quarter'), moment().endOf('quarter')],
               'Last Quarter': [moment().subtract(3, 'M').startOf('quarter'), moment().subtract(3, 'M').endOf('quarter')],
               'This Year': [moment().startOf('year'), moment().endOf('year')],
               'Last year': [moment().startOf('year').subtract(1, 'y'), moment().endOf('year').subtract(1, 'y')],
               'This Financial Year': [current_fiscal_year_start, current_fiscal_year_end],
               'Last Financial year': [last_fiscal_year_start, last_fiscal_year_end],

            },
            alwaysShowCalendars: true,
        }, cb);

        $('#reportrange').on('apply.daterangepicker', function(ev, picker) {
            window.location = window.location.pathname + "?startdate=" + encodeURIComponent(picker.startDate.format('YYYY-MM-DD')) + '&enddate=' + encodeURIComponent(picker.endDate.format('YYYY-MM-DD'));
        });

    });
    </script>
{% endblock %}


{% block javascripts_inline %}
    <script>

        var pieData = {{ piechartvalues|raw }}

        // Get context with jQuery - using jQuery's .get() method.
        var ctx = $("#spendingPie").get(0).getContext("2d");
        // This will get the first returned node in the jQuery collection.
        var myDoughnutChart = new Chart(ctx).Doughnut(pieData, {responsive: true});
    </script>
{% endblock %}