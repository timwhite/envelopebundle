{% extends 'base.html.twig' %}
{% block page_title %}All bank transactions that are unbalanced{% endblock %}
{% block page_subtitle %}All these bank transactions need to be balanced until the unassigned amount is $0. Balance them by assigning amounts to budget accounts{% endblock %}
{% block page_content %}
    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header with-border">
                    <h3 class="card-title">Unbalanced Transactions ({{ unbalancedtransactions|length }})</h3>
                </div>
                <form action="{{ path('envelope_bulk_code') }}" method="post">
                <!-- /.box-header -->
                <div class="table-responsive">

                    <table class="table card-table table-vcenter table-striped datatable" data-order='[[ 0, "asc" ]]' data-page-length='25'>
                        <thead>
                        <tr>
                            <th>Date</th>
                            <th>Description</th>
                            <th>Amount</th>
                            <th>Unassigned Amount</th>
                            <th>Suggested Category</th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for transaction in unbalancedtransactions %}
                            <tr data-transaction-id="{{ transaction.id }}">
                                <td><input type="checkbox" name="bulktransactions[]" value="{{ transaction.id }}"/>{{ transaction.date|date('d/m/y') }}</td>
                                <td>
                                    <a href="{{ path('envelope_transaction', {'id': transaction.id, 'return': 'unbalanced_transactions'}) }}">{{ transaction.description }}</a>
                                </td>
                                <td align="right" {% if transaction.amount < 0 %}class="text-danger"{% endif %}>
                                    <span data-toggle="tooltip"
                                          title="{{ transaction.PositiveBudgetSum|format_currency('AUD') }} / {{ transaction.NegativeBudgetSum|format_currency('AUD') }}">
                                    {{ transaction.amount|format_currency('AUD') }}
                                    </span>
                                </td>
                                <td align="right">{{ transaction.unassignedsum|format_currency('AUD') }}</td>
                                {%  set suggestedBudgetAccount = tntClassifier.suggestBudgetAccount(transaction) %}
                                <td><button class="btn btn-warning" onclick="code_suggested_category(this); return false;" data-suggested-budget-account="{{ suggestedBudgetAccount['budgetAccountId'] }}">
                                        <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-category-plus"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 4h6v6h-6zm10 0h6v6h-6zm-10 10h6v6h-6zm10 3h6m-3 -3v6" /></svg>
                                        {{ suggestedBudgetAccount['suggestedBudget'] }}</button></td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>


                </div>
                    <div class="card-footer">
                        <span class="col-sm-8 col-xs-7">
                                {{ form_widget(codingForm.budget_transactions.vars.prototype.budgetaccount, { 'attr': {'class': 'combobox'} })|replace({'__name__': 0})|raw }}
                        </span>
                        <button type="submit" class="btn btn-primary">
                            <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-category-plus"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 4h6v6h-6zm10 0h6v6h-6zm-10 10h6v6h-6zm10 3h6m-3 -3v6" /></svg>
                            Bulk Code Selected Transactions
                        </button>
                    </div>
                </form>
            </div>
            <!-- /.box -->
        </div>
        <!-- col -->
        <span class="clearfix"></span>

    </div><!-- row -->

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        function code_suggested_category(elem) {
            elem.classList.add('disabled');
            elem.classList.add('btn-loading');
            elem.disabled = true;
            const parent_tr = elem.closest("[data-transaction-id]");
            const budgetAccountId = elem.getAttribute("data-suggested-budget-account");
            const transactionId = parseInt(parent_tr.getAttribute("data-transaction-id"));

            const query = Routing.generate('envelope_transaction_code_api', {
                'id': transactionId,
                'budgetAccountId': budgetAccountId
            });

            fetch(query, {method: 'POST'})
                .then((response) => {
                    if (!response.ok) {
                        alert('Error coding transaction ' + transactionId)
                    }

                    return response.json()
                })
                .then((response) => {
                    if (response.success === true && response.transactionId === transactionId) {
                        parent_tr.classList.add("removed");
                        parent_tr.addEventListener("transitionend", () => {
                            parent_tr.remove();
                        })
                        console.log("Successfully coded transaction " + transactionId);
                    } else {
                        console.debug(response)
                        console.error("Successful response from coding call, but incorrect JSON response");
                        alert("Successful response from coding call, but incorrect JSON response for transaction " + transactionId);
                    }
                })

        }
    </script>
{% endblock %}

{% block javascripts_inline %}
    <script src="{{ asset('assets/vendor/datatables-sorting-datetime-moment/js/datetime-moment.js') }}"></script>
    <script>
        $(function () {
            $.fn.dataTable.moment( 'DD/MM/YY' );
            $('.datatable').DataTable({
                "paging": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "autoWidth": true,
                "order": [[ 0, "desc" ]],
            });
        });
    </script>
{% endblock %}